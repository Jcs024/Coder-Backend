<div class="container main-content fade-in">
  <h1 class="page-title">⚡ Productos en Tiempo Real</h1>

  <div class="card">
    <div class="card-header">
      <h3>➕ Agregar Nuevo Producto</h3>
    </div>
    <div class="card-body">
      <form id="productForm">
        <div class="row">
          <div class="col-md-6">
            <div class="form-group">
              <label class="form-label">📝 Título</label>
              <input type="text" class="form-control" name="title" required>
            </div>
            <div class="form-group">
              <label class="form-label">📋 Descripción</label>
              <textarea class="form-control" name="description" rows="2" required></textarea>
            </div>
            <div class="form-group">
              <label class="form-label">💰 Precio</label>
              <input type="number" class="form-control" name="price" step="0.01" required>
            </div>
          </div>
          <div class="col-md-6">
            <div class="form-group">
              <label class="form-label">🔢 Código Único</label>
              <input type="text" class="form-control" name="code" required>
            </div>
            <div class="form-group">
              <label class="form-label">📦 Stock</label>
              <input type="number" class="form-control" name="stock" required>
            </div>
            <div class="form-group">
              <label class="form-label">🏷️ Categoría</label>
              <input type="text" class="form-control" name="category" required>
            </div>
          </div>
        </div>
        <button type="submit" class="btn btn-success btn-block btn-lg">🚀 Agregar Producto</button>
      </form>
    </div>
  </div>

  <div class="card">
    <div class="card-header">
      <h3>📦 Productos Existentes ({{products.length}})</h3>
    </div>
    <div class="card-body">
      {{#if products.length}}
        <div class="table-container">
          <table class="table table-striped">
            <thead>
              <tr>
                <th>Título</th>
                <th>Precio</th>
                <th>Stock</th>
                <th>Categoría</th>
                <th>Acciones</th>
              </tr>
            </thead>
            <tbody id="productsTable">
              {{#each products}}
                <tr id="product-{{this._id}}">
                  <td>{{this.title}}</td>
                  <td>${{this.price}}</td>
                  <td>{{this.stock}}</td>
                  <td>{{this.category}}</td>
                  <td>
                    <button class="btn btn-danger btn-sm delete-btn" data-product-id="{{this._id}}">
                      🗑️ Eliminar
                    </button>
                  </td>
                </tr>
              {{/each}}
            </tbody>
          </table>
        </div>
      {{else}}
        <div class="empty-state">
          <h5>😔 No hay productos disponibles</h5>
          <p class="text-muted">¡Agrega el primero usando el formulario arriba!</p>
        </div>
      {{/if}}
    </div>
  </div>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const socket = io();
    

    socket.on('updateProducts', (products) => {
      updateProductsList(products);
    });

    document.getElementById('productForm').addEventListener('submit', (e) => {
      e.preventDefault();
      
      const formData = new FormData(e.target);
      const productData = {
        title: formData.get('title'),
        description: formData.get('description'),
        price: parseFloat(formData.get('price')),
        code: formData.get('code'),
        stock: parseInt(formData.get('stock')),
        category: formData.get('category')
      };

      socket.emit('newProduct', productData);
      
      e.target.reset();
    });

    document.getElementById('productsTable').addEventListener('click', (e) => {
      if (e.target.classList.contains('delete-btn')) {
        const productId = e.target.getAttribute('data-product-id');
        socket.emit('deleteProduct', productId);
      }
    });

    socket.on('productError', (error) => {
      Swal.fire('Error', error, 'error');
    });

    socket.on('productSuccess', (message) => {
      Swal.fire('Éxito', message, 'success');
    });

    function updateProductsList(products) {
      const tbody = document.getElementById('productsTable');
      
      if (products.payload && products.payload.length > 0) {
        tbody.innerHTML = products.payload.map(product => `
          <tr id="product-${product._id}">
            <td>${product.title}</td>
            <td>$${product.price}</td>
            <td>${product.stock}</td>
            <td>${product.category}</td>
            <td>
              <button class="btn btn-danger btn-sm delete-btn" data-product-id="${product._id}">
                🗑️ Eliminar
              </button>
            </td>
          </tr>
        `).join('');
      } else {
        tbody.innerHTML = `
          <tr>
            <td colspan="5" class="text-center py-4">
              <h5>😔 No hay productos disponibles</h5>
              <p class="text-muted">¡Agrega el primero usando el formulario arriba!</p>
            </td>
          </tr>
        `;
      }
    }
  });
</script>